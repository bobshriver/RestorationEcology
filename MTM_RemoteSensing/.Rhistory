p_empty<-.8
p_i<-.5
p_j<-.5
p_iOut<-p_jOut<-numeric(20)
for (t in 1:20){
p_i<-((1-m_i)*p_i)+((m_i*p_i)+(m_j*p_j))*((b_i*p_i)/((b_i*p_i)+(b_j[t]*p_j)))
p_j<-((1-m_j)*p_j)+((m_j*p_j)+(m_i*p_i))*((b_j[t]*p_j)/((b_j[t]*p_j)+(b_i*p_i)))
#pempty<-1-(p_i+p_j)
p_iOut[t] <-p_i
p_jOut[t] <-p_j
}
### Remaining individual + availible spots*( )
par(mfrow=c(2,1))
plot(p_iOut,type='l',col='green', ylim=c(0,1),ylab='Population Density')
lines(p_jOut,col='steelblue')
##################3
m_i<-1
b_i<-1.5
m_j<-.1
b_j<-c(seq(.01,.2,length=20))
b_j[2]<-1
b_j[5]<-1
p_empty<-.8
p_i<-.5
p_j<-.5
p_iOut<-p_jOut<-numeric(20)
for (t in 1:20){
p_i<-((1-m_i)*p_i)+((m_i*p_i)+(m_j*p_j))*((b_i*p_i)/((b_i*p_i)+(b_j[t]*p_j)))
p_j<-((1-m_j)*p_j)+((m_j*p_j)+(m_i*p_i))*((b_j[t]*p_j)/((b_j[t]*p_j)+(b_i*p_i)))
p_iOut[t] <-p_i
p_jOut[t] <-p_j
}
plot(p_iOut,type='l',col='green', ylim=c(0,1),ylab='Population Density')
lines(p_jOut,col='steelblue')
setwd("/Volumes/GoogleDrive/My Drive/UNR/Classes/Restoration_Ecology/Labs/RestorationEcology/MTM_RemoteSensing")
MineData<-read.csv('Mine_NDVIData.csv') ##This function will read in our dataset
MineData
###Now we will clean up an realign our data###
Minedata$Mine.Year-1984+1
###Now we will clean up an realign our data###
MineData$Mine.Year-1984+1
MineDataMessy<-read.csv('Mine_NDVIData.csv') ##This function will read in our dataset
RefData<-
###Now we will clean up an realign our data###
MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
View(MineDataMessy)
SP<-MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
MineData<-matrix(NA,36,22)
for (i in 1:22){
MineData[1:(36-SP[i]),22]<-MineDataMessy[SP:36,-(1:2)]
}
MineDataMessy
MineDataMessy[i,-(1:2)]
[SP[i]:36]
SP[i]:36
MineDataMessy[i,-(1:2)][SP[i]:36]
i
SP
MineDataMessy$Mine.Year
SP<-MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
MineData<-matrix(NA,36,22)
for (i in 1:22){
MineData[1:(36-SP[i]),22]<-MineDataMessy[i,-(1:2)][SP[i]:36]
}
MineDataMessy<-read.csv('Mine_NDVIData.csv') ##This function will read in our dataset
RefData<-
###Now we will clean up an realign our data###
SP<-MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
MineData<-matrix(NA,36,22)
for (i in 1:22){
MineData[1:(36-SP[i]),i]<-MineDataMessy[i,-(1:2)][SP[i]:36]
}
MineData[1:(36-SP[i]),i]
SP<-MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
MineData<-matrix(NA,36,22)
for (i in 1:22){
MineData[1:(36-(SP[i]+1)),i]<-MineDataMessy[i,-(1:2)][SP[i]:36]
}
i
MineDataMessy[i,-(1:2)][SP[i]:36]
1:(36-(SP[i]+1))
for (i in 1:22){
MineData[1:(36-(SP[i]-1)),i]<-MineDataMessy[i,-(1:2)][SP[i]:36]
}
1:(36-(SP[i]-1))
length(MineDataMessy[i,-(1:2)][SP[i]:36])
length(1:(36-(SP[i]-1)))
###Now we will clean up an realign our data###
SP<-MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
MineData<-matrix(NA,36,22)
for (i in 1:22){
MineData[1:(36-(SP[i]-1)),i]<-c(MineDataMessy[i,-(1:2)][SP[i]:36])
}
i
c(MineDataMessy[i,-(1:2)][SP[i]:36])
MineData[1:(36-(SP[i]-1)),i]<-as.matrix(MineDataMessy[i,-(1:2)])[SP[i]:36]
as.matrix(MineDataMessy[i,-(1:2)])
MineDataMessy[i,-(1:2)][SP[i]:36]
MineData[1:(36-(SP[i]-1)),i]
i
1:(36-(SP[i]-1))
MineData
###Now we will clean up an realign our data###
SP<-MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
MineData<-matrix(NA,36,22)
for (i in 1:22){
MineData[1:(36-(SP[i]-1)),i]<-as.matrix(MineDataMessy[i,-(1:2)][SP[i]:36])
}
MineData
matplot(MineData,type='l')
matplot(MineData,type='l')
matplot(MineData,type='l', ylab='NDVI', xlab='Years since mining')
RefData<-read.csv('RefData.csv')
abline(h=Ref)
Ref<-0.862180708
abline(h=Ref, lwd=2)
i<-1
lm(MineData[i,-1]~MineData[i,SP[i]])
mod<-lm(MineData[i,2:SP[i]]~MineData[i,1:(SP[i]-1)])
mod
MineData[i,2:SP[i]]
MineData[i,1:(SP[i]-1)]
MineData[1]
MineData[1,]
mod<-lm(MineData[2:SP[i],i]~MineData[1:(SP[i]-1)],i)
mod
parsOut[i,]<-coef(mod)
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:SP[i],i]~MineData[1:(SP[i]-1)],i)
parsOut[i,]<-coef(mod)
}
coef(mod)
parsOut
i<-1
mod<-lm(MineData[2:SP[i],i]~MineData[1:(SP[i]-1)],i)
mod
i<-1
i<-4
lm(MineData[2:SP[i],i]~MineData[1:(SP[i]-1)],i)
MineData[2:SP[i],i]
MineData
SP[i]
SP<-MineDataMessy$Mine.Year-1984+1 ###What year into the dataset did mining cease
MineData<-matrix(NA,36,22)
for (i in 1:22){
MineData[1:(36-(SP[i]-1)),i]<-as.matrix(MineDataMessy[i,-(1:2)][SP[i]:36])
}
SP
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]),i]~MineData[1:(36-SP[i]-1)],i)
parsOut[i,]<-coef(mod)
FitARModel<-function(
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]),i]~MineData[1:(36-SP[i]-1)],i)
parsOut[i,]<-coef(mod)
}
)
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]),i]~MineData[1:(36-SP[i]-1)],i)
parsOut[i,]<-coef(mod)
}
parsOut
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]-1),i]~MineData[1:(36-SP[i])],i)
parsOut[i,]<-coef(mod)
FitARModel<-function(
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]-1),i]~MineData[1:(36-SP[i])],i)
parsOut[i,]<-coef(mod)
}
)
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]-1),i]~MineData[1:(36-SP[i])],i)
parsOut[i,]<-coef(mod)
}
i
2:(36-SP[i]-1)
Minedata[,1]
MineData[,1]
MineData[2:(36-SP[i]+1)
MineData[2:(36-SP[i]+1),i]
MineData[1:(36-SP[i]),i]
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
parsOut[i,]<-coef(mod)
}
parsOut
FitARModel<-function(){
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
parsOut[i,]<-coef(mod)
}
return(parsOut)
}
FitARModel
FitARModel()
FitARModelall<-function(){
parsOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
parsOut[i,]<-coef(mod)
}
return(parsOut)
}
FitARModel()
model[,1]/(1-model[,2])
model<-FitARModel()
model[,1]/(1-model[,2])
hist(model)
model
MineData[,2]
plot(MineData[,2])
plot(MineData[,2],type='l')
lm(MineData[2:20,2]~MineData[1:19,2])
plot(MineData[,3],type='l')
hist(SS)
SS<-model[,1]/(1-model[,2])
hist(SS)
abline(v=Ref)
abline(v=Ref,lwd=2,col='red')
i<-1
parsOut<-matrix(NA,22,2)
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
vcov(mod)
library(MASS)
?rmvnormv
?rmvnorm
library(mvtnorm)
rmvnorm(1000,coef(mod),vcov(mod))
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.025,.975))
CIfunction<-function(){
CIOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
CI<-quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.025,.975))
CIOut[i,]<-CI
}
return(parsOut)
}
CIfunction<-function(){
CIOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
CI<-quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.025,.975))
CIOut[i,]<-CI
}
return(CIOut)
}
CIfunction()
MineData[,7]
plot(MineData[,7],type='l')
plot(MineData[,1],type='l')
plot(MineData[,22],type='l')
plot(MineData[,3],type='l')
plot(MineData[,15],type='l')
plot(MineData[,21],type='l')
plot(MineData[,11],type='l')
plot(MineData[,7],type='l')
plot(MineData[,5],type='l')
plot(MineData[,21],type='l')
plot(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
CIfunction<-function(){
CIOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
CI<-quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.05,.95))
CIOut[i,]<-CI
}
return(CIOut)
}
CIfunction()
i<-7
MineData[2:(36-SP[i]+1),i]
MineData[1:(36-SP[i])
,i]
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
mod
summary(mod)
CIfunction<-function(){
CIOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
CI<-quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.025,.975))
CIOut[i,]<-CI
}
vcov(mod)
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
hist(Pout[,1]/(1-Pout[,2]))
hist(Pout)
hist(Pout[,1])
hist(Pout[,2])
quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.025,.975))
Pout[,1]/(1-Pout[,2]
)
i
coef(mod)
plot(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
MineData[1:(36-SP[i])
,i]
.32/(1-.57)
x<-cbind(1,MineData[1:(36-SP[i]),i])
y<-MineData[2:(36-SP[i]+1),i]
solve(t(x)%*%x)%*%t(x)%*%y
x<-cbind(1,MineData[2:(36-SP[i]),i])
y<-MineData[3:(36-SP[i]+1),i]
solve(t(x)%*%x)%*%t(x)%*%y
y<-MineDataMessy[2:36,i]
x<-cbind(1,MineDataMessy[2:36,i])
x<-cbind(1,MineDataMessy[1:35,i])
solve(t(x)%*%x)%*%t(x)%*%y
x
MineDataMessy[,7]
x<-cbind(1,MineDataMessy[i,1:35])
x
x<-cbind(1,as.matrix(MineDataMessy[i,1:35]))
x
x<-cbind(1,as.matrix(MineDataMessy[i,3:39]))
x<-cbind(1,as.matrix(MineDataMessy[i,3:38]))
x
x<-cbind(1,c(MineDataMessy[i,3:38]))
x
y<-c(MineDataMessy[i,4:39]))
x<-cbind(1,c(MineDataMessy[i,3:37]))
y<-c(MineDataMessy[i,4:38]))
y<-c(MineDataMessy[i,4:38])
y
y<-as.matrix(MineDataMessy[i,4:38])
y
solve(t(x)%*%x)%*%t(x)%*%y
y<-c(as.matrix(MineDataMessy[i,4:38]))
y
solve(t(x)%*%x)%*%t(x)%*%y
x<-cbind(1,c(as.matrix(MineDataMessy[i,3:37])))
x
solve(t(x)%*%x)%*%t(x)%*%y
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
mod
447/3
return(CIOut)
CIfunction<-function(){
CIOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
CI<-quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.025,.975))
CIOut[i,]<-CI
}
return(CIOut)
}
CIfunction
CIfunction90
CIfunction()
plot(1:22,ylim(0,1.5))
plot(1:22,ylim=c(0,1.5))
plot(1:22,ylim=c(0,1.5),col='white')
plot(1:22,ylim=c(0,1.5),col='white', ylab='NDVI')
plot(1:22,ylim=c(0,1.5),col='white', ylab='NDVI', xlab='Site')
abline(h=Ref, col='Red')
abline(h=Ref, col='Red', lwd=2)
CIs<-CIfunction
plot(1:22,ylim=c(0,1.5),col='white', ylab='NDVI', xlab='Site')
abline(h=Ref, col='Red', lwd=2)
arrows(1:22,y0=CIs[,1],y1=CIs[,2],angle=90)
CIs<-CIfunction
CIs
CIs<-CIfunction()
plot(1:22,ylim=c(0,1.5),col='white', ylab='NDVI', xlab='Site')
abline(h=Ref, col='Red', lwd=2)
arrows(1:22,y0=CIs[,1],y1=CIs[,2],angle=90)
arrow
arrow2
arrows
?arrows
arrows(1:22,y0=CIs[,1],y1=CIs[,2],length=0,lwd=1.5)
plot(1:22,ylim=c(0,1.5),col='white', ylab='NDVI', xlab='Site')
abline(h=Ref, col='Red', lwd=2)
arrows(1:22,y0=CIs[,1],y1=CIs[,2],length=0,lwd=1.5)
log(8.77)
log(30+8.77)
log(30)
.638*1.96
sqrt(.1)
.1^1
.1^2
sqrt(.1)
1.96*.3
1.96*.01
1.96*.\1
1.96*.1
N<-matrix(NA,Tmax,1)
lam<-c(.86,1.16)
Tmax<-50
Nt<-10
N<-matrix(NA,Tmax,1)
lam_t<-sample(lam,size=Tmax,replace=T)
lam_t
for (i in 1:Tmax){
Nt<-lam_t[t]*Nt
N[t,1]<-Nt
}
plot(N,type='l')
N
Tmax<-50
Nt<-10
N<-matrix(NA,Tmax,1)
lam_t<-sample(lam,size=Tmax,replace=T)
for (i in 1:Tmax){
Nt<-lam_t[t]*Nt
N[t,1]<-Nt
}
N
Tmax<-50
Nt<-10
N<-matrix(NA,Tmax,1)
lam_t<-sample(lam,size=Tmax,replace=T)
N
lam_t
lam_t[t]*Nt
lam<-c(.86,1.16)
Tmax<-50
Nt<-10
N<-matrix(NA,Tmax,1)
lam_t<-sample(lam,size=Tmax,replace=T)
for (i in 1:Tmax){
Nt<-lam_t[t]*Nt
N[t,1]<-Nt
}
N
Nt
lam<-c(.86,1.16)
Tmax<-50
Nt<-10
N<-matrix(NA,Tmax,1)
lam_t<-sample(lam,size=Tmax,replace=T)
for (t in 1:Tmax){
Nt<-lam_t[t]*Nt
N[t,1]<-Nt
}
plot(N,type='l')
Tmax<-50
reps<-20
N<-matrix(NA,Tmax,reps)
lam_t<-sample(lam,size=Tmax,replace=T)
for(i in 1:reps){
Nt<-10
lam_t<-sample(lam,size=Tmax,replace=T)
for (t in 1:Tmax){
Nt<-lam_t[t]*Nt
N[t,i]<-Nt
}
}
matplot(N,type='l')
lam_mean<-mean(lam)
1.01
for (t in 1:Tmax){
Nt<-lam_mean*Nt
Nmean[t,1]<-Nt
}
lam_mean<-mean(lam)
N_mean<-matrix(NA,Tmax,1)
Nt<-10
for (t in 1:Tmax){
Nt<-lam_mean*Nt
Nmean[t,1]<-Nt
}
lam_mean<-mean(lam)
N_mean<-matrix(NA,Tmax,1)
Nt<-10
for (t in 1:Tmax){
Nt<-lam_mean*Nt
N_mean[t,1]<-Nt
}
lines(N_mean)
model<-FitARModel()
model[,1]
model[,1]
model[,2]
CIs<-CIfunction()
plot(1:22,ylim=c(0,1.5),col='white', ylab='NDVI', xlab='Site')
abline(h=Ref, col='Red', lwd=2)
arrows(1:22,y0=CIs[,1],y1=CIs[,2],length=0,lwd=1.5)
matplot(MineData,type='l', ylab='NDVI', xlab='Years since mining')
CIfunction<-function(){
CIOut<-matrix(NA,22,2)
for (i in 1:22){
mod<-lm(MineData[2:(36-SP[i]+1),i]~MineData[1:(36-SP[i]),i])
Pout<-rmvnorm(1000,coef(mod),vcov(mod))
CI<-quantile(Pout[,1]/(1-Pout[,2]),probs = c(0.025,.975))
CIOut[i,]<-CI
}
plot(1:22,ylim=c(0,1.5),col='white', ylab='NDVI', xlab='Site')
abline(h=Ref, col='Red', lwd=2)
arrows(1:22,y0=CIs[,1],y1=CIs[,2],length=0,lwd=1.5)
}
CIfunction()
CIfunction()
MineDataMessy<-read.csv('Mine_NDVIData.csv') ##This function will read in our dataset
4000*12
200*12
